{"version":3,"sources":["utilities.js","App.js","index.js"],"names":["labelMap","1","name","color","2","3","4","5","drawRect","boxes","classes","scores","threshold","imgWidth","imgHeight","ctx","i","length","y","x","height","width","text","strokeStyle","lineWidth","fillStyle","font","beginPath","fillText","Math","round","rect","stroke","mic","window","SpeechRecognition","webkitSpeechRecognition","continuous","interimResults","lang","App","webcamRef","useRef","canvasRef","runCoco","a","tf","net","setInterval","detect","current","video","readyState","videoWidth","videoHeight","img","fromPixels","resized","resizeBilinear","casted","cast","expanded","expandDims","executeAsync","obj","console","log","array","getContext","requestAnimationFrame","useEffect","useState","isListening","setIsListening","note","setNote","handleListen","start","onend","stop","onstart","onresult","event","transcript","Array","from","results","map","result","join","onerror","error","className","ref","muted","style","position","marginLeft","marginRight","left","right","textAlign","zindex","class","onClick","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91faf068.chunk.js","sourcesContent":["// Define our labelmap\nconst labelMap = {\n    1:{name:'Hello', color:'red'},\n    2:{name:'Thank You', color:'yellow'},\n    3:{name:'I Love You', color:'lime'},\n    4:{name:'Yes', color:'blue'},\n    5:{name:'No', color:'purple'},\n}\n\n// Define a drawing function\nexport const drawRect = (boxes, classes, scores, threshold, imgWidth, imgHeight, ctx)=>{\n    for(let i=0; i<=boxes.length; i++){\n        if(boxes[i] && classes[i] && scores[i]>threshold){\n            // Extract variables\n            const [y,x,height,width] = boxes[i]\n            const text = classes[i]\n            \n            // Set styling\n            ctx.strokeStyle = labelMap[text]['color']\n            ctx.lineWidth = 10\n            ctx.fillStyle = 'white'\n            ctx.font = '30px Arial'         \n            \n            // DRAW!!\n            ctx.beginPath()\n            ctx.fillText(labelMap[text]['name'] + ' - ' + Math.round(scores[i]*100)/100, x*imgWidth, y*imgHeight-10)\n            ctx.rect(x*imgWidth, y*imgHeight, width*imgWidth/2, height*imgHeight/1.5);\n            ctx.stroke()\n        }\n    }\n}","// Import dependencies\nimport React, { useRef, useState, useEffect } from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport Webcam from \"react-webcam\";\nimport \"./App.css\";\nimport { nextFrame } from \"@tensorflow/tfjs\";\n// 2. TODO - Import drawing utility here\n// e.g. import { drawRect } from \"./utilities\";\nimport { drawRect } from \"./utilities\";\n\nfunction App() {\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  // Main function\n  const runCoco = async () => {\n    // 3. TODO - Load network \n    // e.g. const net = await cocossd.load();\n    // https://tensorflowjsrealtimemodel.s3.au-syd.cloud-object-storage.appdomain.cloud/model.json\n    const net = await tf.loadGraphModel('https://tensorflowjsrealtimemodel.s3.au-syd.cloud-object-storage.appdomain.cloud/model.json')\n\n    //  Loop and detect hands\n    setInterval(() => {\n      detect(net);\n    }, 16.7);\n  };\n\n  const detect = async (net) => {\n    // Check data is available\n    if (\n      typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current !== null &&\n      webcamRef.current.video.readyState === 4\n    ) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight;\n\n      // Set video width\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight;\n\n      // Set canvas height and width\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight;\n\n      // 4. TODO - Make Detections\n      const img = tf.browser.fromPixels(video)\n      const resized = tf.image.resizeBilinear(img, [640, 480])\n      const casted = resized.cast('int32')\n      const expanded = casted.expandDims(0)\n      const obj = await net.executeAsync(expanded)\n      console.log(obj)\n\n      const boxes = await obj[1].array()\n      const classes = await obj[2].array()\n      const scores = await obj[4].array()\n\n      // Draw mesh\n      const ctx = canvasRef.current.getContext(\"2d\");\n\n      // 5. TODO - Update drawing utility\n      // drawSomething(obj, ctx)  \n      requestAnimationFrame(() => { drawRect(boxes[0], classes[0], scores[0], 0.8, videoWidth, videoHeight, ctx) });\n\n      tf.dispose(img)\n      tf.dispose(resized)\n      tf.dispose(casted)\n      tf.dispose(expanded)\n      tf.dispose(obj)\n\n    }\n  };\n\n  useEffect(() => { runCoco() }, []);\n\n  const [isListening, setIsListening] = useState(false)\n  const [note, setNote] = useState(null)\n  const [savedNotes, setSavedNotes] = useState([])\n\n  useEffect(() => {\n    handleListen()\n  }, [isListening])\n\n  const handleListen = () => {\n    if (isListening) {\n      mic.start()\n      mic.onend = () => {\n        console.log('continue..')\n        mic.start()\n      }\n    } else {\n      mic.stop()\n      mic.onend = () => {\n        console.log('Stopped Mic on Click')\n      }\n    }\n    mic.onstart = () => {\n      console.log('Mics on')\n    }\n\n    mic.onresult = event => {\n      const transcript = Array.from(event.results)\n        .map(result => result[0])\n        .map(result => result.transcript)\n        .join('')\n      console.log(transcript)\n      setNote(transcript)\n      mic.onerror = event => {\n        console.log(event.error)\n      }\n    }\n  }\n\n  const handleSaveNote = () => {\n    setSavedNotes([...savedNotes, note])\n    setNote('')\n  }\n\n  return (\n    <div className=\"App\">\n      \n      <header className=\"App-header\">\n        <Webcam\n          ref={webcamRef}\n          muted={true}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"50px\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480,\n          }}\n        />\n\n        <canvas\n          ref={canvasRef}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"50px\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 8,\n            width: 640,\n            height: 480,\n          }}\n        />\n        <div class=\"notes\">\n      {/* <h1>Speech to Text</h1> */}\n      <div className=\"container\">\n        <div className=\"box\">\n         \n          {isListening ? <span>🎙️</span> : <span>🛑🎙️</span>}\n          {/* <button onClick={handleSaveNote} disabled={!note}>\n            Save Note\n          </button> */}\n          <button onClick={() => setIsListening(prevState => !prevState)}>\n            Start/Stop\n          </button>\n          <p>{note}</p>\n        </div>\n        {/* <div className=\"box\">\n          <h2>Notes</h2>\n          {savedNotes.map(n => (\n            <p key={n}>{n}</p>\n          ))}\n        </div> */}\n      </div>\n   </div>\n      </header>\n      </div>\n  );\n \n}\nconst SpeechRecognition =\n  window.SpeechRecognition || window.webkitSpeechRecognition\nconst mic = new SpeechRecognition()\n\nmic.continuous = true\nmic.interimResults = true\nmic.lang = 'en-US'\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}